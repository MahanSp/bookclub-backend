### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

type Book {
  author: String!
  id: Int!
  title: String!
  translator: String
  users: [User]
}

type Invite {
  email: String!
  id: Int!
  inviter: User
}

type Mutation {
  login(email: String!, password: String!): AuthPayload!
  newBook(author: String!, title: String!, translator: String): Book!
  newInvite(email: String!): Invite!
  signup(birthday: String, city: String, country: String, email: String!, firstname: String!, lastname: String!, password: String!, phonenumber: String): AuthPayload!
}

type Query {
  inviteSearch: [Invite!]!
}

type User {
  birthday: String
  books: [Book]
  city: String
  country: String
  email: String!
  firstname: String!
  id: Int!
  invitation: [Invite]
  lastname: String!
  password: String!
  phonenumber: String
}
